version: '3'
services:
  postgres:
    image: postgres:14
    container_name: infrastructure_postgre
    restart: unless-stopped
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    networks:
      - postgres
    
  pgadmin:
    image: dpage/pgadmin4:5.7
    container_name: infrastructure_db_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: "simonik1002@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "postgres"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: infrastructure_zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: infrastructure_kafka
    restart: unless-stopped
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
      - "9997:9997"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      AUTO_CREATE_TOPICS: "true"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      JMX_PORT: 9997
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9997

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: infrastructure_kafka-ui
    restart: unless-stopped
    ports:
      - "8082:8080"
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local_kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9997

  init-kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: infrastructure_init-kafka
    volumes:
      - './init-kafka-topics.sh:/usr/local/bin/init-kafka-topics.sh'
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: 
      - init-kafka-topics.sh

networks:
  postgres:
    driver: bridge

volumes:
  s3-data:
